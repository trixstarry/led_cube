Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o (exit)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
                              wifi.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                              wifi.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
LOAD wifi.o
LOAD spi.o
LOAD mirf.o
LOAD usart.o
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x592
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000002e       0x16 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
                0x0000002e                __do_copy_data
 .init4         0x00000044       0x10 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x00000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000054        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x00000058        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
                0x00000058                __vector_1
                0x00000058                __vector_12
                0x00000058                __bad_interrupt
                0x00000058                __vector_6
                0x00000058                __vector_3
                0x00000058                __vector_13
                0x00000058                __vector_17
                0x00000058                __vector_5
                0x00000058                __vector_4
                0x00000058                __vector_9
                0x00000058                __vector_2
                0x00000058                __vector_15
                0x00000058                __vector_8
                0x00000058                __vector_14
                0x00000058                __vector_10
                0x00000058                __vector_16
                0x00000058                __vector_18
 .text          0x0000005a      0x216 wifi.o
                0x0000005a                Transmit
                0x0000006a                Receive
                0x0000010e                test_Transmit
                0x00000136                test_protocol
                0x00000146                __vector_7
                0x000001c0                main
 .text          0x00000270       0x82 spi.o
                0x00000270                spi_init
                0x00000280                spi
                0x00000292                spi_transfer_sync
                0x000002bc                spi_transmit_sync
                0x000002e0                spi_fast_shift
 .text          0x000002f2      0x266 mirf.o
                0x000002f2                mirf_init
                0x0000030e                mirf_data_ready
                0x00000326                mirf_config_register
                0x0000034a                mirf_get_data
                0x00000374                tx_complete
                0x000003a0                __vector_11
                0x0000040e                mirf_config
                0x00000428                mirf_read_register
                0x00000456                mirf_write_register
                0x00000486                mirf_set_TADDR
                0x00000490                mirf_set_RADDR
                0x0000049e                mirf_set_RADDR_P1
                0x000004ac                mirf_send
 .text          0x00000558       0x36 usart.o
                0x00000558                USART_Init
                0x00000566                USART_Transmit
                0x0000056e                USART_Receive
                0x00000576                transmit_string
 .text          0x0000058e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text          0x0000058e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .text          0x0000058e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x0000058e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000058e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x0000058e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000058e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x0000058e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000058e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                0x0000058e                exit
                0x0000058e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000058e        0x4 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000592                _etext = .

.data           0x00800060       0x30 load address 0x00000592
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
 .data          0x00800060       0x2f wifi.o
                0x0080006f                buffer
 .data          0x0080008f        0x0 spi.o
 .data          0x0080008f        0x0 mirf.o
 .data          0x0080008f        0x0 usart.o
 .data          0x0080008f        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .data          0x0080008f        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .data          0x0080008f        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800090                . = ALIGN (0x2)
 *fill*         0x0080008f        0x1 00
                0x00800090                _edata = .
                0x00800090                PROVIDE (__data_end, .)

.bss            0x00800090        0x3
                0x00800090                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800090        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
 .bss           0x00800090        0x2 wifi.o
                0x00800090                buffer_index
                0x00800091                transmit_flag
 .bss           0x00800092        0x0 spi.o
 .bss           0x00800092        0x1 mirf.o
                0x00800092                PTX
 .bss           0x00800093        0x0 usart.o
 .bss           0x00800093        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .bss           0x00800093        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .bss           0x00800093        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800093                PROVIDE (__bss_end, .)
                0x00000592                __data_load_start = LOADADDR (.data)
                0x000005c2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800093        0x0
                0x00800093                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800093                PROVIDE (__noinit_end, .)
                0x00800093                _end = .
                0x00800093                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x20f4
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
 .stab          0x000006b4      0x840 wifi.o
                                0x84c (size before relaxing)
 .stab          0x00000ef4      0x4bc spi.o
                                0x684 (size before relaxing)
 .stab          0x000013b0      0xa2c mirf.o
                                0xbf4 (size before relaxing)
 .stab          0x00001ddc      0x318 usart.o
                                0x4ec (size before relaxing)

.stabstr        0x00000000      0xbd5
 *(.stabstr)
 .stabstr       0x00000000      0xbd5 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(wifi.elf elf32-avr)
LOAD linker stubs
