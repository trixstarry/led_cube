Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o (exit)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
                              wifi.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                              wifi.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

PTX                 0x1               mirf.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00010000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
LOAD wifi.o
LOAD spi.o
LOAD mirf.o
LOAD /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xc5c
 *(.vectors)
 .vectors       0x00000000       0x50 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000050      0x2ee wifi.o
                0x00000050                R
                0x0000014a                G
                0x00000244                B
                0x0000033e                . = ALIGN (0x2)
                0x0000033e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000033e        0x0 linker stubs
 *(.trampolines*)
                0x0000033e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000033e                __ctors_start = .
 *(.ctors)
                0x0000033e                __ctors_end = .
                0x0000033e                __dtors_start = .
 *(.dtors)
                0x0000033e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000033e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x0000033e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000033e        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000034a       0x16 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
                0x0000034a                __do_copy_data
 .init4         0x00000360       0x10 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x00000360                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000370        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 *(.init9)
 *(.text)
 .text          0x00000378        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x00000378                __vector_1
                0x00000378                __vector_12
                0x00000378                __bad_interrupt
                0x00000378                __vector_6
                0x00000378                __vector_11
                0x00000378                __vector_13
                0x00000378                __vector_17
                0x00000378                __vector_19
                0x00000378                __vector_7
                0x00000378                __vector_5
                0x00000378                __vector_4
                0x00000378                __vector_9
                0x00000378                __vector_2
                0x00000378                __vector_15
                0x00000378                __vector_8
                0x00000378                __vector_14
                0x00000378                __vector_10
                0x00000378                __vector_16
                0x00000378                __vector_18
 .text          0x0000037c      0x644 wifi.o
                0x0000037c                level
                0x000003d4                transmit2
                0x00000448                red_led
                0x000004d4                blue_led
                0x00000560                green_led
                0x000005ec                leds
                0x00000638                test_frame
                0x00000658                Transmit
                0x0000065e                Receive
                0x000006b4                test_Transmit
                0x000006d6                test_protocol
                0x00000700                init
                0x00000718                init2
                0x00000728                transmit_led
                0x0000072e                led1_on
                0x00000770                led_off
                0x000007b2                led2_on
                0x000007f4                led3_on
                0x00000836                test_xbee_pins
                0x00000852                sensors
                0x0000085e                main
 .text          0x000009c0       0x88 spi.o
                0x000009c0                spi_init
                0x000009d4                SPI_Transmit
                0x000009e0                SPI_Transmit_All
                0x000009fe                SPI_Receive
                0x00000a0c                SPI_Receive_All
                0x00000a24                SPI_Transceive
 .text          0x00000a48      0x210 mirf.o
                0x00000a48                mirf_init
                0x00000a6c                mirf_data_ready
                0x00000a84                mirf_config_register
                0x00000aac                mirf_get_data
                0x00000ad4                rx_powerup
                0x00000b02                __vector_3
                0x00000b6e                mirf_config
                0x00000b8e                mirf_read_register
                0x00000bc0                mirf_write_register
                0x00000bf4                mirf_set_TADDR
                0x00000c00                mirf_set_RADDR
                0x00000c10                mirf_send
 .text          0x00000c58        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .text          0x00000c58        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .text          0x00000c58        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x00000c58                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000c58        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .text.libgcc   0x00000c58        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000c58        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x00000c58                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000c58        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
                0x00000c58                exit
                0x00000c58                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000c58        0x4 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 *(.fini0)
                0x00000c5c                _etext = .

.data           0x00800100       0x20 load address 0x00000c5c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .data          0x00800100       0x20 wifi.o
 .data          0x00800120        0x0 spi.o
 .data          0x00800120        0x0 mirf.o
 .data          0x00800120        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .data          0x00800120        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .data          0x00800120        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800120                . = ALIGN (0x2)
                0x00800120                _edata = .
                0x00800120                PROVIDE (__data_end, .)

.bss            0x00800120       0x33
                0x00800120                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800120        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .bss           0x00800120       0x32 wifi.o
                0x00800120                frame
 .bss           0x00800152        0x0 spi.o
 .bss           0x00800152        0x0 mirf.o
 .bss           0x00800152        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .bss           0x00800152        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .bss           0x00800152        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800152        0x1 mirf.o
                0x00800152                PTX
                0x00800153                PROVIDE (__bss_end, .)
                0x00000c5c                __data_load_start = LOADADDR (.data)
                0x00000c7c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800153        0x0
                0x00800153                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800153                PROVIDE (__noinit_end, .)
                0x00800153                _end = .
                0x00800153                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2778
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .stab          0x000006cc     0x13b0 wifi.o
                               0x13bc (size before relaxing)
 .stab          0x00001a7c      0x498 spi.o
                                0x660 (size before relaxing)
 .stab          0x00001f14      0x864 mirf.o
                                0xa2c (size before relaxing)

.stabstr        0x00000000      0xe6b
 *(.stabstr)
 .stabstr       0x00000000      0xe6b /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(wifi.elf elf32-avr)
LOAD linker stubs
