Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
                              ledcube.o (__udivmodqi4)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o (exit)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
                              ledcube.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                              ledcube.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

PTX                 0x1               mirf.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00010000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
LOAD ledcube.o
LOAD mirf.o
LOAD spi.o
LOAD /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x2180
 *(.vectors)
 .vectors       0x00000000       0x50 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000050       0x96 ledcube.o
 *(.progmem*)
 .progmem.data  0x000000e6      0x2ee ledcube.o
                0x000000e6                R
                0x000001e0                G
                0x000002da                B
                0x000003d4                . = ALIGN (0x2)
                0x000003d4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000003d4        0x0 linker stubs
 *(.trampolines*)
                0x000003d4                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000003d4                __ctors_start = .
 *(.ctors)
                0x000003d4                __ctors_end = .
                0x000003d4                __dtors_start = .
 *(.dtors)
                0x000003d4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000003d4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x000003d4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000003d4        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000003e0       0x16 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
                0x000003e0                __do_copy_data
 .init4         0x000003f6       0x10 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x000003f6                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000406        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 *(.init9)
 *(.text)
 .text          0x0000040e        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x0000040e                __vector_1
                0x0000040e                __vector_12
                0x0000040e                __bad_interrupt
                0x0000040e                __vector_6
                0x0000040e                __vector_11
                0x0000040e                __vector_13
                0x0000040e                __vector_17
                0x0000040e                __vector_19
                0x0000040e                __vector_7
                0x0000040e                __vector_5
                0x0000040e                __vector_4
                0x0000040e                __vector_2
                0x0000040e                __vector_15
                0x0000040e                __vector_8
                0x0000040e                __vector_14
                0x0000040e                __vector_10
                0x0000040e                __vector_16
                0x0000040e                __vector_18
 .text          0x00000412     0x1aea ledcube.o
                0x00000412                initialize_interrupts
                0x0000041a                level
                0x00000472                transmit1
                0x000004d0                transmit2
                0x00000550                level_test
                0x000005f2                shift_LED
                0x000007e4                hall_test
                0x0000085e                red
                0x00000c54                green
                0x00001078                blue
                0x0000149c                LED_test
                0x00001510                test_led
                0x000015a2                red_led
                0x0000162e                blue_led
                0x000016ba                green_led
                0x00001746                leds
                0x00001792                test_frame
                0x000017b2                clear_frame
                0x000017d6                test_pattern
                0x00001d30                test_pattern1
                0x00001e4c                Transmit
                0x00001e7c                __vector_9
                0x00001eb4                main
 .text          0x00001efc      0x1e2 mirf.o
                0x00001efc                mirf_init
                0x00001f20                mirf_data_ready
                0x00001f38                mirf_config_register
                0x00001f60                mirf_get_data
                0x00001f88                __vector_3
                0x00001ff4                mirf_config
                0x00002014                mirf_read_register
                0x00002046                mirf_write_register
                0x0000207a                mirf_set_TADDR
                0x00002086                mirf_set_RADDR
                0x00002096                mirf_send
 .text          0x000020de       0x86 spi.o
                0x000020de                spi_init
                0x000020f2                SPI_Transmit
                0x000020fe                SPI_Transmit_All
                0x0000211c                SPI_Receive
                0x00002128                SPI_Receive_All
                0x00002140                SPI_Transceive
 .text          0x00002164        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
 .text          0x00002164        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .text          0x00002164        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .text          0x00002164        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x00002164                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00002164       0x18 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
                0x00002164                __udivmodqi4
 .text.libgcc   0x0000217c        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .text.libgcc   0x0000217c        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000217c        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x0000217c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000217c        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
                0x0000217c                exit
                0x0000217c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000217c        0x4 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 *(.fini0)
                0x00002180                _etext = .

.data           0x00800100       0x48 load address 0x00002180
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .data          0x00800100       0x47 ledcube.o
                0x00800100                transmit_buffer
                0x00800120                receive_buffer
 .data          0x00800147        0x0 mirf.o
 .data          0x00800147        0x0 spi.o
 .data          0x00800147        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
 .data          0x00800147        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .data          0x00800147        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .data          0x00800147        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800148                . = ALIGN (0x2)
 *fill*         0x00800147        0x1 00
                0x00800148                _edata = .
                0x00800148                PROVIDE (__data_end, .)

.bss            0x00800148       0x42
                0x00800148                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800148        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .bss           0x00800148       0x41 ledcube.o
                0x00800148                frame
                0x0080017a                next
 .bss           0x00800189        0x0 mirf.o
 .bss           0x00800189        0x0 spi.o
 .bss           0x00800189        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
 .bss           0x00800189        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .bss           0x00800189        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .bss           0x00800189        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800189        0x1 mirf.o
                0x00800189                PTX
                0x0080018a                PROVIDE (__bss_end, .)
                0x00002180                __data_load_start = LOADADDR (.data)
                0x000021c8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080018a        0x0
                0x0080018a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080018a                PROVIDE (__noinit_end, .)
                0x0080018a                _end = .
                0x0080018a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x3f90
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .stab          0x000006cc     0x2c70 ledcube.o
                               0x2c7c (size before relaxing)
 .stab          0x0000333c      0x7bc mirf.o
                                0x984 (size before relaxing)
 .stab          0x00003af8      0x498 spi.o
                                0x660 (size before relaxing)

.stabstr        0x00000000      0xf31
 *(.stabstr)
 .stabstr       0x00000000      0xf31 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ledcube.elf elf32-avr)
LOAD linker stubs
