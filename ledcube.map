Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
                              ledcube.o (__udivmodqi4)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o (exit)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
                              ledcube.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                              ledcube.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00010000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
LOAD ledcube.o
LOAD /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x172e
 *(.vectors)
 .vectors       0x00000000       0x50 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000050       0x96 ledcube.o
 *(.progmem*)
                0x000000e6                . = ALIGN (0x2)
                0x000000e6                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000e6        0x0 linker stubs
 *(.trampolines*)
                0x000000e6                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000e6                __ctors_start = .
 *(.ctors)
                0x000000e6                __ctors_end = .
                0x000000e6                __dtors_start = .
 *(.dtors)
                0x000000e6                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000e6        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x000000e6                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000e6        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000f2       0x16 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
                0x000000f2                __do_copy_data
 .init4         0x00000108       0x10 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x00000108                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000118        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 *(.init9)
 *(.text)
 .text          0x00000120        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x00000120                __vector_1
                0x00000120                __vector_12
                0x00000120                __bad_interrupt
                0x00000120                __vector_6
                0x00000120                __vector_3
                0x00000120                __vector_11
                0x00000120                __vector_13
                0x00000120                __vector_17
                0x00000120                __vector_19
                0x00000120                __vector_7
                0x00000120                __vector_5
                0x00000120                __vector_4
                0x00000120                __vector_9
                0x00000120                __vector_2
                0x00000120                __vector_15
                0x00000120                __vector_8
                0x00000120                __vector_14
                0x00000120                __vector_10
                0x00000120                __vector_16
                0x00000120                __vector_18
 .text          0x00000124     0x15ee ledcube.o
                0x00000124                spi_init
                0x00000138                transmit1
                0x00000196                transmit2
                0x000001d6                level
                0x0000022e                red
                0x00000652                green
                0x00000a76                blue
                0x00000e9a                LED_test
                0x00000f0e                patrick_test
                0x00000f30                level_test
                0x00000fd2                on
                0x00000ff4                off
                0x00001016                shift_LED
                0x00001208                hall_test
                0x00001282                PIN_Test
                0x000014ca                test_led
                0x0000155c                red_led
                0x000015be                blue_led
                0x00001620                green_led
                0x00001682                leds
                0x000016ce                test_frame
                0x000016ee                main
 .text          0x00001712        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
 .text          0x00001712        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .text          0x00001712        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .text          0x00001712        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x00001712                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001712       0x18 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
                0x00001712                __udivmodqi4
 .text.libgcc   0x0000172a        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .text.libgcc   0x0000172a        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000172a        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x0000172a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000172a        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
                0x0000172a                exit
                0x0000172a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000172a        0x4 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 *(.fini0)
                0x0000172e                _etext = .

.data           0x00800100      0x2f6 load address 0x0000172e
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .data          0x00800100      0x2f5 ledcube.o
                0x00800100                R
                0x008001fa                G
                0x008002f4                B
 .data          0x008003f5        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
 .data          0x008003f5        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .data          0x008003f5        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .data          0x008003f5        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008003f6                . = ALIGN (0x2)
 *fill*         0x008003f5        0x1 00
                0x008003f6                _edata = .
                0x008003f6                PROVIDE (__data_end, .)

.bss            0x008003f6       0x3f
                0x008003f6                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008003f6        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .bss           0x008003f6       0x3f ledcube.o
                0x008003f6                frame
 .bss           0x00800435        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodqi4.o)
 .bss           0x00800435        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .bss           0x00800435        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_copy_data.o)
 .bss           0x00800435        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800435                PROVIDE (__bss_end, .)
                0x0000172e                __data_load_start = LOADADDR (.data)
                0x00001a24                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800435        0x0
                0x00800435                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800435                PROVIDE (__noinit_end, .)
                0x00800435                _end = .
                0x00800435                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2f40
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .stab          0x000006cc     0x2874 ledcube.o
                               0x2880 (size before relaxing)

.stabstr        0x00000000      0xaa5
 *(.stabstr)
 .stabstr       0x00000000      0xaa5 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ledcube.elf elf32-avr)
LOAD linker stubs
