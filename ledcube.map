Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_mulhi3.o)
                              ledcube.o (__mulhi3)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_divmodhi4.o)
                              ledcube.o (__divmodhi4)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o (exit)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                              ledcube.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

PTX                 0x1               mirf.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00010000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
LOAD ledcube.o
LOAD spi.o
LOAD mirf.o
LOAD /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1ca6
 *(.vectors)
 .vectors       0x00000000       0x50 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000050      0x6f6 ledcube.o
                0x00000050                R
                0x0000014a                G
                0x00000244                B
                0x0000033e                power_duration
                0x0000034a                off
                0x00000386                on
                0x000003c2                pattern1
                0x000004ee                pattern2
                0x0000061a                pattern3
                0x00000746                . = ALIGN (0x2)
                0x00000746                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000746        0x0 linker stubs
 *(.trampolines*)
                0x00000746                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000746                __ctors_start = .
 *(.ctors)
                0x00000746                __ctors_end = .
                0x00000746                __dtors_start = .
 *(.dtors)
                0x00000746                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000746        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x00000746                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000746        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000752       0x10 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
                0x00000752                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000762        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 *(.init9)
 *(.text)
 .text          0x0000076a        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
                0x0000076a                __vector_1
                0x0000076a                __vector_12
                0x0000076a                __bad_interrupt
                0x0000076a                __vector_6
                0x0000076a                __vector_11
                0x0000076a                __vector_13
                0x0000076a                __vector_17
                0x0000076a                __vector_19
                0x0000076a                __vector_7
                0x0000076a                __vector_5
                0x0000076a                __vector_4
                0x0000076a                __vector_9
                0x0000076a                __vector_2
                0x0000076a                __vector_15
                0x0000076a                __vector_8
                0x0000076a                __vector_14
                0x0000076a                __vector_10
                0x0000076a                __vector_16
                0x0000076a                __vector_18
 .text          0x0000076e     0x11cc ledcube.o
                0x0000076e                level
                0x000007c6                transmit2
                0x0000084c                red_led
                0x000008d8                blue_led
                0x00000964                green_led
                0x000009f0                leds
                0x00000a3c                test_frame
                0x00000a48                pattern
                0x0000117c                translate
                0x0000148e                test_cube
                0x0000182c                Transmit
                0x0000184e                Receive
                0x0000187c                test_Transmit
                0x0000189e                init
                0x000018b6                init2
                0x000018bc                sensors
                0x000018c4                main
 .text          0x0000193a       0x88 spi.o
                0x0000193a                spi_init
                0x0000194e                SPI_Transmit
                0x0000195a                SPI_Transmit_All
                0x00001978                SPI_Receive
                0x00001986                SPI_Receive_All
                0x0000199e                SPI_Transceive
 .text          0x000019c2      0x26e mirf.o
                0x000019c2                mirf_init
                0x000019e6                mirf_data_ready
                0x000019fe                mirf_config_register
                0x00001a26                mirf_get_data
                0x00001a4e                tx_complete
                0x00001a7c                __vector_3
                0x00001ae8                mirf_config
                0x00001b08                mirf_read_register
                0x00001b3a                mirf_write_register
                0x00001b6e                mirf_set_TADDR
                0x00001b7a                mirf_set_RADDR
                0x00001b8a                mirf_send
 .text          0x00001c30        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_mulhi3.o)
 .text          0x00001c30        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_divmodhi4.o)
 .text          0x00001c30        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .text          0x00001c30        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 .text          0x00001c30        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodhi4.o)
                0x00001c30                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001c30       0x24 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_mulhi3.o)
                0x00001c30                __mulhi3
 .text.libgcc   0x00001c54       0x26 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_divmodhi4.o)
                0x00001c54                __divmodhi4
                0x00001c54                _div
 .text.libgcc   0x00001c7a        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .text.libgcc   0x00001c7a        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001c7a       0x28 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodhi4.o)
                0x00001c7a                __udivmodhi4
                0x00001ca2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001ca2        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
                0x00001ca2                exit
                0x00001ca2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001ca2        0x4 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 *(.fini0)
                0x00001ca6                _etext = .

.data           0x00800100        0x0 load address 0x00001ca6
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .data          0x00800100        0x0 ledcube.o
 .data          0x00800100        0x0 spi.o
 .data          0x00800100        0x0 mirf.o
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_mulhi3.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_divmodhi4.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x34
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .bss           0x00800100       0x33 ledcube.o
                0x00800100                frame
 .bss           0x00800133        0x0 spi.o
 .bss           0x00800133        0x0 mirf.o
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_mulhi3.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_divmodhi4.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_exit.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_clear_bss.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.5.3/avr35/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800133        0x1 mirf.o
                0x00800133                PTX
                0x00800134                PROVIDE (__bss_end, .)
                0x00001ca6                __data_load_start = LOADADDR (.data)
                0x00001ca6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800134        0x0
                0x00800134                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800134                PROVIDE (__noinit_end, .)
                0x00800134                _end = .
                0x00800134                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x3144
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o
 .stab          0x000006cc     0x1ca4 ledcube.o
                               0x1cb0 (size before relaxing)
 .stab          0x00002370      0x498 spi.o
                                0x660 (size before relaxing)
 .stab          0x00002808      0x93c mirf.o
                                0xb04 (size before relaxing)

.stabstr        0x00000000      0xf00
 *(.stabstr)
 .stabstr       0x00000000      0xf00 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr35/crttn167.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ledcube.elf elf32-avr)
LOAD linker stubs
