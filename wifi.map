Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o (exit)
/usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
                              wifi.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
                              wifi.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o
LOAD wifi.o
LOAD spi.o
LOAD mirf.o
LOAD usart.o
LOAD /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5ba
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002e       0x16 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
                0x000000000000002e                __do_copy_data
 .init4         0x0000000000000044       0x10 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
                0x0000000000000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000054        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x0000000000000058        0x2 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o
                0x0000000000000058                __vector_1
                0x0000000000000058                __vector_12
                0x0000000000000058                __bad_interrupt
                0x0000000000000058                __vector_6
                0x0000000000000058                __vector_3
                0x0000000000000058                __vector_13
                0x0000000000000058                __vector_17
                0x0000000000000058                __vector_5
                0x0000000000000058                __vector_4
                0x0000000000000058                __vector_9
                0x0000000000000058                __vector_2
                0x0000000000000058                __vector_15
                0x0000000000000058                __vector_8
                0x0000000000000058                __vector_14
                0x0000000000000058                __vector_10
                0x0000000000000058                __vector_16
                0x0000000000000058                __vector_18
 .text          0x000000000000005a      0x26a wifi.o
                0x000000000000005a                USART_Flush
                0x0000000000000066                __vector_7
                0x0000000000000116                Receive
                0x0000000000000166                test_protocol
                0x0000000000000172                Transmit
                0x0000000000000196                main
                0x0000000000000246                test
                0x000000000000029a                test_Transmit
 .text          0x00000000000002c4       0x90 spi.o
                0x00000000000002c4                spi_init
                0x00000000000002d4                spi
                0x00000000000002e6                spi_transfer_sync
                0x000000000000031a                spi_transmit_sync
                0x0000000000000342                spi_fast_shift
 .text          0x0000000000000354      0x22c mirf.o
                0x0000000000000354                mirf_config_register
                0x000000000000036a                mirf_config
                0x0000000000000384                mirf_data_ready
                0x000000000000039c                tx_complete
                0x00000000000003c8                __vector_11
                0x0000000000000436                mirf_write_register
                0x0000000000000458                mirf_set_TADDR
                0x0000000000000462                mirf_set_RADDR
                0x0000000000000470                mirf_set_RADDR_P1
                0x000000000000047e                mirf_read_register
                0x00000000000004a0                mirf_send
                0x000000000000053a                mirf_get_data
                0x0000000000000564                mirf_init
 .text          0x0000000000000580       0x36 usart.o
                0x0000000000000580                USART_Init
                0x000000000000058e                USART_Transmit
                0x0000000000000596                USART_Receive
                0x000000000000059e                transmit_string
 .text          0x00000000000005b6        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 .text          0x00000000000005b6        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
 .text          0x00000000000005b6        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
                0x00000000000005b6                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000000000005b6        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000005b6        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000005b6        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
                0x00000000000005b6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005b6        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
                0x00000000000005b6                exit
                0x00000000000005b6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005b6        0x4 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005ba                _etext = .

.data           0x0000000000800060       0x26 load address 0x00000000000005ba
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o
 .data          0x0000000000800060       0x25 wifi.o
                0x0000000000800064                buffer
                0x0000000000800084                timeout_flag
 .data          0x0000000000800085        0x0 spi.o
 .data          0x0000000000800085        0x0 mirf.o
 .data          0x0000000000800085        0x0 usart.o
 .data          0x0000000000800085        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800085        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
 .data          0x0000000000800085        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800086                . = ALIGN (0x2)
 *fill*         0x0000000000800085        0x1 00
                0x0000000000800086                _edata = .
                0x0000000000800086                PROVIDE (__data_end, .)

.bss            0x0000000000800086        0x5
                0x0000000000800086                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o
 .bss           0x0000000000800086        0x4 wifi.o
                0x0000000000800086                buffer_in_use
                0x0000000000800087                buffer_index
                0x0000000000800088                transmit_flag
                0x0000000000800089                doing_flag
 .bss           0x000000000080008a        0x0 spi.o
 .bss           0x000000000080008a        0x1 mirf.o
                0x000000000080008a                PTX
 .bss           0x000000000080008b        0x0 usart.o
 .bss           0x000000000080008b        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 .bss           0x000000000080008b        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
 .bss           0x000000000080008b        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x000000000080008b                PROVIDE (__bss_end, .)
                0x00000000000005ba                __data_load_start = LOADADDR (.data)
                0x00000000000005e0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080008b        0x0
                0x000000000080008b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080008b                PROVIDE (__noinit_end, .)
                0x000000000080008b                _end = .
                0x000000000080008b                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x228c
 *(.stab)
 .stab          0x0000000000000000      0x69c /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o
 .stab          0x000000000000069c      0xa98 wifi.o
                                        0xaa4 (size before relaxing)
 .stab          0x0000000000001134      0x474 spi.o
                                        0x630 (size before relaxing)
 .stab          0x00000000000015a8      0x9d8 mirf.o
                                        0xb94 (size before relaxing)
 .stab          0x0000000000001f80      0x30c usart.o
                                        0x4d4 (size before relaxing)

.stabstr        0x0000000000000000      0xc79
 *(.stabstr)
 .stabstr       0x0000000000000000      0xc79 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(wifi.elf elf32-avr)
LOAD linker stubs
